{
  "id": "5aba15fb-caa4-4071-9aad-379102b6a426",
  "prevId": "44a884e2-ab44-4d7d-90d6-b90aedd10599",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.clicks": {
      "name": "clicks",
      "schema": "",
      "columns": {
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_click_history": {
          "name": "user_click_history",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "clicks_postId_posts_id_fk": {
          "name": "clicks_postId_posts_id_fk",
          "tableFrom": "clicks",
          "tableTo": "posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "clicks_userId_users_id_fk": {
          "name": "clicks_userId_users_id_fk",
          "tableFrom": "clicks",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "clicks_postId_userId_pk": {
          "name": "clicks_postId_userId_pk",
          "columns": [
            "postId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.clusters": {
      "name": "clusters",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.engagement_history": {
      "name": "engagement_history",
      "schema": "",
      "columns": {
        "likes": {
          "name": "likes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "replies": {
          "name": "replies",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "clicks": {
          "name": "clicks",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "viewerId": {
          "name": "viewerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "publisherId": {
          "name": "publisherId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "engagement_history_viewerId_users_id_fk": {
          "name": "engagement_history_viewerId_users_id_fk",
          "tableFrom": "engagement_history",
          "tableTo": "users",
          "columnsFrom": [
            "viewerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "engagement_history_publisherId_users_id_fk": {
          "name": "engagement_history_publisherId_users_id_fk",
          "tableFrom": "engagement_history",
          "tableTo": "users",
          "columnsFrom": [
            "publisherId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "engagement_history_viewerId_publisherId_pk": {
          "name": "engagement_history_viewerId_publisherId_pk",
          "columns": [
            "viewerId",
            "publisherId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.likes": {
      "name": "likes",
      "schema": "",
      "columns": {
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_like_history": {
          "name": "user_like_history",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "likes_postId_posts_id_fk": {
          "name": "likes_postId_posts_id_fk",
          "tableFrom": "likes",
          "tableTo": "posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "likes_userId_users_id_fk": {
          "name": "likes_userId_users_id_fk",
          "tableFrom": "likes",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "likes_postId_userId_pk": {
          "name": "likes_postId_userId_pk",
          "columns": [
            "postId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.posts": {
      "name": "posts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "likeCount": {
          "name": "likeCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "replyCount": {
          "name": "replyCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "viewCount": {
          "name": "viewCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "clickCount": {
          "name": "clickCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "topic": {
          "name": "topic",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "engaging": {
          "name": "engaging",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "replyingTo": {
          "name": "replyingTo",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "engagementCount": {
          "name": "engagementCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "generated": {
            "as": "(\n            \"posts\".\"likeCount\" +\n            \"posts\".\"replyCount\" +\n            \"posts\".\"clickCount\" \n        )",
            "type": "stored"
          }
        },
        "embeddingText": {
          "name": "embeddingText",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(384)",
          "primaryKey": false,
          "notNull": false
        },
        "keywords": {
          "name": "keywords",
          "type": "varchar(50)[]",
          "primaryKey": false,
          "notNull": false
        },
        "pending": {
          "name": "pending",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "media": {
          "name": "media",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "commentScore": {
          "name": "commentScore",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "generated": {
            "as": "\n        (\n            ((\"posts\".\"likeCount\" + \"posts\".\"replyCount\" + \"posts\".\"clickCount\" + 10) / (\"posts\".\"viewCount\" + 10))::float \n            * \n            (\"posts\".\"likeCount\" + \"posts\".\"replyCount\" + \"posts\".\"clickCount\")::float\n        )",
            "type": "stored"
          }
        }
      },
      "indexes": {
        "replyingToIndex": {
          "name": "replyingToIndex",
          "columns": [
            {
              "expression": "replyingTo",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "userReplyHistoryIndex": {
          "name": "userReplyHistoryIndex",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "recencyIndex": {
          "name": "recencyIndex",
          "columns": [
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "recentPostsIndex": {
          "name": "recentPostsIndex",
          "columns": [
            {
              "expression": "replyingTo",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "postsKeywordIndex": {
          "name": "postsKeywordIndex",
          "columns": [
            {
              "expression": "keywords",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"posts\".\"replyingTo\" is null",
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "orderRepliesByScoreIndex": {
          "name": "orderRepliesByScoreIndex",
          "columns": [
            {
              "expression": "replyingTo",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "commentScore",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"posts\".\"replyingTo\" is not null",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "posts_userId_users_id_fk": {
          "name": "posts_userId_users_id_fk",
          "tableFrom": "posts",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reply_to_post_fkey": {
          "name": "reply_to_post_fkey",
          "tableFrom": "posts",
          "tableTo": "posts",
          "columnsFrom": [
            "replyingTo"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "engaging clamp": {
          "name": "engaging clamp",
          "value": "\"posts\".\"engaging\" >= 0 AND \"posts\".\"engaging\" <= 1"
        }
      },
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "handle": {
          "name": "handle",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "followerCount": {
          "name": "followerCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "interests": {
          "name": "interests",
          "type": "varchar(50)[]",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'"
        },
        "bot": {
          "name": "bot",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(384)",
          "primaryKey": false,
          "notNull": false
        },
        "clusterId": {
          "name": "clusterId",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "users_clusterId_index": {
          "name": "users_clusterId_index",
          "columns": [
            {
              "expression": "clusterId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "users_clusterId_clusters_id_fk": {
          "name": "users_clusterId_clusters_id_fk",
          "tableFrom": "users",
          "tableTo": "clusters",
          "columnsFrom": [
            "clusterId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_handle_unique": {
          "name": "users_handle_unique",
          "nullsNotDistinct": false,
          "columns": [
            "handle"
          ]
        },
        "users_name_unique": {
          "name": "users_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.views": {
      "name": "views",
      "schema": "",
      "columns": {
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_view_history": {
          "name": "user_view_history",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "views_postId_posts_id_fk": {
          "name": "views_postId_posts_id_fk",
          "tableFrom": "views",
          "tableTo": "posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "views_userId_users_id_fk": {
          "name": "views_userId_users_id_fk",
          "tableFrom": "views",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "views_postId_userId_pk": {
          "name": "views_postId_userId_pk",
          "columns": [
            "postId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}