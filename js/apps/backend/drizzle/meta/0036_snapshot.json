{
  "id": "7f3909fa-d2d0-4f3f-a363-ccc2965343e6",
  "prevId": "ba1653a6-2f87-425c-b592-87937bdb1e55",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.clicks": {
      "name": "clicks",
      "schema": "",
      "columns": {
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "posterId": {
          "name": "posterId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_click_history": {
          "name": "user_click_history",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "clicks_postId_posts_id_fk": {
          "name": "clicks_postId_posts_id_fk",
          "tableFrom": "clicks",
          "tableTo": "posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "clicks_userId_users_id_fk": {
          "name": "clicks_userId_users_id_fk",
          "tableFrom": "clicks",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "clicks_posterId_users_id_fk": {
          "name": "clicks_posterId_users_id_fk",
          "tableFrom": "clicks",
          "tableTo": "users",
          "columnsFrom": [
            "posterId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "clicks_postId_userId_pk": {
          "name": "clicks_postId_userId_pk",
          "columns": [
            "postId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.clusters": {
      "name": "clusters",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.follows": {
      "name": "follows",
      "schema": "",
      "columns": {
        "followerId": {
          "name": "followerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "followedId": {
          "name": "followedId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "follows_followedId_followerId_createdAt_index": {
          "name": "follows_followedId_followerId_createdAt_index",
          "columns": [
            {
              "expression": "followedId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "followerId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "follows_followerId_followedId_createdAt_index": {
          "name": "follows_followerId_followedId_createdAt_index",
          "columns": [
            {
              "expression": "followerId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "followedId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "follows_followerId_users_id_fk": {
          "name": "follows_followerId_users_id_fk",
          "tableFrom": "follows",
          "tableTo": "users",
          "columnsFrom": [
            "followerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "follows_followedId_users_id_fk": {
          "name": "follows_followedId_users_id_fk",
          "tableFrom": "follows",
          "tableTo": "users",
          "columnsFrom": [
            "followedId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "follows_followerId_followedId_pk": {
          "name": "follows_followerId_followedId_pk",
          "columns": [
            "followerId",
            "followedId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.follow_snapshots": {
      "name": "follow_snapshots",
      "schema": "",
      "columns": {
        "followerId": {
          "name": "followerId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "followedId": {
          "name": "followedId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "isFollowing": {
          "name": "isFollowing",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "follow_snapshots_followerId_followedId_createdAt_index": {
          "name": "follow_snapshots_followerId_followedId_createdAt_index",
          "columns": [
            {
              "expression": "followerId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "followedId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "follow_snapshots_followerId_users_id_fk": {
          "name": "follow_snapshots_followerId_users_id_fk",
          "tableFrom": "follow_snapshots",
          "tableTo": "users",
          "columnsFrom": [
            "followerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "follow_snapshots_followedId_users_id_fk": {
          "name": "follow_snapshots_followedId_users_id_fk",
          "tableFrom": "follow_snapshots",
          "tableTo": "users",
          "columnsFrom": [
            "followedId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "follow_snapshots_followerId_followedId_createdAt_pk": {
          "name": "follow_snapshots_followerId_followedId_createdAt_pk",
          "columns": [
            "followerId",
            "followedId",
            "createdAt"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.keyword_popularities": {
      "name": "keyword_popularities",
      "schema": "",
      "columns": {
        "keyword": {
          "name": "keyword",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "posts": {
          "name": "posts",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "date": {
          "name": "date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "keyword_popularities_date_index": {
          "name": "keyword_popularities_date_index",
          "columns": [
            {
              "expression": "date",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "keyword_popularities_keyword_date_index": {
          "name": "keyword_popularities_keyword_date_index",
          "columns": [
            {
              "expression": "keyword",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "date",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "keyword_popularities_keyword_date_pk": {
          "name": "keyword_popularities_keyword_date_pk",
          "columns": [
            "keyword",
            "date"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.likes": {
      "name": "likes",
      "schema": "",
      "columns": {
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "posterId": {
          "name": "posterId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_like_history": {
          "name": "user_like_history",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "likes_postId_posts_id_fk": {
          "name": "likes_postId_posts_id_fk",
          "tableFrom": "likes",
          "tableTo": "posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "likes_userId_users_id_fk": {
          "name": "likes_userId_users_id_fk",
          "tableFrom": "likes",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "likes_posterId_users_id_fk": {
          "name": "likes_posterId_users_id_fk",
          "tableFrom": "likes",
          "tableTo": "users",
          "columnsFrom": [
            "posterId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "likes_postId_userId_pk": {
          "name": "likes_postId_userId_pk",
          "columns": [
            "postId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.notifications": {
      "name": "notifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "notification_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "data": {
          "name": "data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "secondaryData": {
          "name": "secondaryData",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "readAt": {
          "name": "readAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "read": {
          "name": "read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "generated": {
            "as": "\"notifications\".\"readAt\" is not null",
            "type": "stored"
          }
        },
        "key": {
          "name": "key",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "recent_notifications_of_user_idx": {
          "name": "recent_notifications_of_user_idx",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "read",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "notification_cleanup_index": {
          "name": "notification_cleanup_index",
          "columns": [
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "unread_notifications_unique_idx": {
          "name": "unread_notifications_unique_idx",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "key",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "where": "\"notifications\".\"read\" = false",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "notifications_userId_users_id_fk": {
          "name": "notifications_userId_users_id_fk",
          "tableFrom": "notifications",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.pending_uploads": {
      "name": "pending_uploads",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "bucketName": {
          "name": "bucketName",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "objectName": {
          "name": "objectName",
          "type": "varchar(200)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "pending_files_of_user": {
          "name": "pending_files_of_user",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "pending_uploads_age": {
          "name": "pending_uploads_age",
          "columns": [
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "pending_uploads_userId_users_id_fk": {
          "name": "pending_uploads_userId_users_id_fk",
          "tableFrom": "pending_uploads",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "pending_uploads_bucketName_objectName_pk": {
          "name": "pending_uploads_bucketName_objectName_pk",
          "columns": [
            "bucketName",
            "objectName"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.persistent_dates": {
      "name": "persistent_dates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "'1970-01-01 00:00:00.000'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.posts": {
      "name": "posts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "likeCount": {
          "name": "likeCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "replyCount": {
          "name": "replyCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "viewCount": {
          "name": "viewCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "clickCount": {
          "name": "clickCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "topic": {
          "name": "topic",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "engaging": {
          "name": "engaging",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "replyingTo": {
          "name": "replyingTo",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "engagementCount": {
          "name": "engagementCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "generated": {
            "as": "(\n            \"posts\".\"likeCount\" +\n            \"posts\".\"replyCount\" +\n            \"posts\".\"clickCount\" \n        )",
            "type": "stored"
          }
        },
        "embeddingText": {
          "name": "embeddingText",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(384)",
          "primaryKey": false,
          "notNull": false
        },
        "embedding_normalized": {
          "name": "embedding_normalized",
          "type": "vector(384)",
          "primaryKey": false,
          "notNull": false
        },
        "hashtags": {
          "name": "hashtags",
          "type": "varchar(50)[]",
          "primaryKey": false,
          "notNull": false
        },
        "keywords": {
          "name": "keywords",
          "type": "varchar(50)[]",
          "primaryKey": false,
          "notNull": false
        },
        "mentions": {
          "name": "mentions",
          "type": "varchar(50)[]",
          "primaryKey": false,
          "notNull": false
        },
        "pending": {
          "name": "pending",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "media": {
          "name": "media",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "commentScore": {
          "name": "commentScore",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "generated": {
            "as": "\n        (\n            ((\"posts\".\"likeCount\" + \"posts\".\"replyCount\" + \"posts\".\"clickCount\" + 10) / (\"posts\".\"viewCount\" + 10))::float \n            * \n            (\"posts\".\"likeCount\" + \"posts\".\"replyCount\" + \"posts\".\"clickCount\")::float\n        )",
            "type": "stored"
          }
        },
        "timeBucket": {
          "name": "timeBucket",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "generated": {
            "as": "floor(extract(epoch from \"posts\".\"createdAt\")/60/60/12)::int",
            "type": "stored"
          }
        },
        "isReply": {
          "name": "isReply",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "generated": {
            "as": "\"posts\".\"replyingTo\" is not null",
            "type": "stored"
          }
        },
        "deleted": {
          "name": "deleted",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "repliedUser": {
          "name": "repliedUser",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "replyingToIndex": {
          "name": "replyingToIndex",
          "columns": [
            {
              "expression": "replyingTo",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "userContentsIndex": {
          "name": "userContentsIndex",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "isReply",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "recentPostsIndex": {
          "name": "recentPostsIndex",
          "columns": [
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"posts\".\"replyingTo\" is null",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "orderRepliesByScoreIndex": {
          "name": "orderRepliesByScoreIndex",
          "columns": [
            {
              "expression": "replyingTo",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "commentScore",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"posts\".\"replyingTo\" is not null",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "recentPostsESimIndex": {
          "name": "recentPostsESimIndex",
          "columns": [
            {
              "expression": "timeBucket",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "embedding_normalized",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "vector_l2_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {}
        },
        "pendingPostsIndex": {
          "name": "pendingPostsIndex",
          "columns": [
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"posts\".\"pending\" = $1",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "searchLatestPostsIndex": {
          "name": "searchLatestPostsIndex",
          "columns": [
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            },
            {
              "expression": "to_tsvector('english', \"text\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "searchtopPostsIndex": {
          "name": "searchtopPostsIndex",
          "columns": [
            {
              "expression": "engagementCount",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            },
            {
              "expression": "to_tsvector('english', \"text\")",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "searchLatestUserPostsIndex": {
          "name": "searchLatestUserPostsIndex",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "searchTopUserPostsIndex": {
          "name": "searchTopUserPostsIndex",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "engagementCount",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "posts_userId_users_id_fk": {
          "name": "posts_userId_users_id_fk",
          "tableFrom": "posts",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "posts_repliedUser_users_id_fk": {
          "name": "posts_repliedUser_users_id_fk",
          "tableFrom": "posts",
          "tableTo": "users",
          "columnsFrom": [
            "repliedUser"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reply_to_post_fkey": {
          "name": "reply_to_post_fkey",
          "tableFrom": "posts",
          "tableTo": "posts",
          "columnsFrom": [
            "replyingTo"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.post_snapshots": {
      "name": "post_snapshots",
      "schema": "",
      "columns": {
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "likeCount": {
          "name": "likeCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "replyCount": {
          "name": "replyCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "clickCount": {
          "name": "clickCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "viewCount": {
          "name": "viewCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "post_snapshots_postId_createdAt_index": {
          "name": "post_snapshots_postId_createdAt_index",
          "columns": [
            {
              "expression": "postId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "post_snapshots_postId_posts_id_fk": {
          "name": "post_snapshots_postId_posts_id_fk",
          "tableFrom": "post_snapshots",
          "tableTo": "posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "post_snapshots_postId_createdAt_pk": {
          "name": "post_snapshots_postId_createdAt_pk",
          "columns": [
            "postId",
            "createdAt"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.trends": {
      "name": "trends",
      "schema": "",
      "columns": {
        "keyword": {
          "name": "keyword",
          "type": "varchar(50)",
          "primaryKey": true,
          "notNull": true
        },
        "growth": {
          "name": "growth",
          "type": "real",
          "primaryKey": false,
          "notNull": true
        },
        "postCount": {
          "name": "postCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "score": {
          "name": "score",
          "type": "real",
          "primaryKey": false,
          "notNull": true,
          "generated": {
            "as": "\"trends\".\"growth\"::float*\"trends\".\"postCount\"::float",
            "type": "stored"
          }
        }
      },
      "indexes": {
        "trends_score_keyword_index": {
          "name": "trends_score_keyword_index",
          "columns": [
            {
              "expression": "score",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            },
            {
              "expression": "keyword",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "trends_keyword_postCount_index": {
          "name": "trends_keyword_postCount_index",
          "columns": [
            {
              "expression": "keyword",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "postCount",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_cluster_trends": {
      "name": "user_cluster_trends",
      "schema": "",
      "columns": {
        "keyword": {
          "name": "keyword",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "clusterId": {
          "name": "clusterId",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "count": {
          "name": "count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "user_cluster_trends_clusterId_count_keyword_index": {
          "name": "user_cluster_trends_clusterId_count_keyword_index",
          "columns": [
            {
              "expression": "clusterId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "count",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            },
            {
              "expression": "keyword",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_cluster_trends_clusterId_clusters_id_fk": {
          "name": "user_cluster_trends_clusterId_clusters_id_fk",
          "tableFrom": "user_cluster_trends",
          "tableTo": "clusters",
          "columnsFrom": [
            "clusterId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "user_cluster_trends_clusterId_keyword_pk": {
          "name": "user_cluster_trends_clusterId_keyword_pk",
          "columns": [
            "clusterId",
            "keyword"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user_embedding_snapshots": {
      "name": "user_embedding_snapshots",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(384)",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_embedding_snapshots_userId_createdAt_index": {
          "name": "user_embedding_snapshots_userId_createdAt_index",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_embedding_snapshots_userId_users_id_fk": {
          "name": "user_embedding_snapshots_userId_users_id_fk",
          "tableFrom": "user_embedding_snapshots",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "user_embedding_snapshots_userId_createdAt_pk": {
          "name": "user_embedding_snapshots_userId_createdAt_pk",
          "columns": [
            "userId",
            "createdAt"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "handle": {
          "name": "handle",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "followerCount": {
          "name": "followerCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "followingCount": {
          "name": "followingCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "interests": {
          "name": "interests",
          "type": "varchar(50)[]",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'"
        },
        "bot": {
          "name": "bot",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(384)",
          "primaryKey": false,
          "notNull": false
        },
        "embedding_normalized": {
          "name": "embedding_normalized",
          "type": "vector(384)",
          "primaryKey": false,
          "notNull": false
        },
        "clusterId": {
          "name": "clusterId",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "fullName": {
          "name": "fullName",
          "type": "varchar(101)",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\"users\".\"name\" || ' ' || \"users\".\"handle\"",
            "type": "stored"
          }
        },
        "avatar": {
          "name": "avatar",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "banner": {
          "name": "banner",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "bio": {
          "name": "bio",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "users_clusterId_index": {
          "name": "users_clusterId_index",
          "columns": [
            {
              "expression": "clusterId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_name_search_index": {
          "name": "user_name_search_index",
          "columns": [
            {
              "expression": "fullName",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "gin_trgm_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "users_followerCount_id_index": {
          "name": "users_followerCount_id_index",
          "columns": [
            {
              "expression": "followerCount",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            },
            {
              "expression": "id",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_handle_index": {
          "name": "users_handle_index",
          "columns": [
            {
              "expression": "handle",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_handle_followerCount_index": {
          "name": "users_handle_followerCount_index",
          "columns": [
            {
              "expression": "handle",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "followerCount",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "users_clusterId_clusters_id_fk": {
          "name": "users_clusterId_clusters_id_fk",
          "tableFrom": "users",
          "tableTo": "clusters",
          "columnsFrom": [
            "clusterId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_handle_unique": {
          "name": "users_handle_unique",
          "nullsNotDistinct": false,
          "columns": [
            "handle"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.views": {
      "name": "views",
      "schema": "",
      "columns": {
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "posterId": {
          "name": "posterId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "user_view_history": {
          "name": "user_view_history",
          "columns": [
            {
              "expression": "userId",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "createdAt",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "views_postId_posts_id_fk": {
          "name": "views_postId_posts_id_fk",
          "tableFrom": "views",
          "tableTo": "posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "views_userId_users_id_fk": {
          "name": "views_userId_users_id_fk",
          "tableFrom": "views",
          "tableTo": "users",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "views_posterId_users_id_fk": {
          "name": "views_posterId_users_id_fk",
          "tableFrom": "views",
          "tableTo": "users",
          "columnsFrom": [
            "posterId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "views_postId_userId_pk": {
          "name": "views_postId_userId_pk",
          "columns": [
            "postId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.notification_type": {
      "name": "notification_type",
      "schema": "public",
      "values": [
        "like",
        "reply",
        "mention",
        "follow"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}