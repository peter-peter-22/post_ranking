"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Dict, List, Optional, Tuple, Type, Union
from torch import nn

class Transform(nn.Module):
    """Base class to implement your own v2 transforms.

    See  :ref:`sphx_glr_auto_examples_transforms_plot_custom_transforms.py` for
    more details.
    """
    _transformed_types: Tuple[Union[Type, Callable[[Any], bool]], ...] = ...
    def __init__(self) -> None:
        ...
    
    def check_inputs(self, flat_inputs: List[Any]) -> None:
        ...
    
    def make_params(self, flat_inputs: List[Any]) -> Dict[str, Any]:
        """Method to override for custom transforms.

        See :ref:`sphx_glr_auto_examples_transforms_plot_custom_transforms.py`"""
        ...
    
    def transform(self, inpt: Any, params: Dict[str, Any]) -> Any:
        """Method to override for custom transforms.

        See :ref:`sphx_glr_auto_examples_transforms_plot_custom_transforms.py`"""
        ...
    
    def forward(self, *inputs: Any) -> Any:
        """Do not override this! Use ``transform()`` instead."""
        ...
    
    def extra_repr(self) -> str:
        ...
    
    _v1_transform_cls: Optional[Type[nn.Module]] = ...
    def __init_subclass__(cls) -> None:
        ...
    
    def __prepare_scriptable__(self) -> nn.Module:
        ...
    


class _RandomApplyTransform(Transform):
    def __init__(self, p: float = ...) -> None:
        ...
    
    def forward(self, *inputs: Any) -> Any:
        ...
    


